{"version":3,"sources":["webpack:///./content/tooling/testing.mdx","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/table-of-contents.js","webpack:///./node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","_ref","components","props","_objectWithoutPropertiesLoose","Object","_mdx_js_react__WEBPACK_IMPORTED_MODULE_6__","assign","mdxType","_primer_components__WEBPACK_IMPORTED_MODULE_8__","_primer_styled_octicons__WEBPACK_IMPORTED_MODULE_9__","mr","href","parentName","className","as","mt","mb","fontSize","color","scheme","_primer_gatsby_theme_doctocat_src_components_inline_code__WEBPACK_IMPORTED_MODULE_10__","isMDXComponent","listStyle","TableOfContents","items","depth","react_default","a","createElement","_StyledBox","m","p","map","item","index_esm","key","url","pl","display","py","title","defaultProps","zIndex","alignItems","alignSelf","gridArea","overflow","Layout","children","pageContext","_pageContext$frontmat","frontmatter","description","status","source","_pageContext$frontmat2","additionalContributors","flexDirection","minHeight","head","header","_StyledFlex","flex","sidebar","_StyledGrid","id","maxWidth","gridTemplateColumns","gridTemplateAreas","gridColumnGap","gridRowGap","mx","_StyledBorderBox","border","borderBottom","borderRadius","pb","tableOfContents","_StyledPosition","position","top","HEADER_HEIGHT","maxHeight","fontWeight","table_of_contents","layout_StyledBox","status_label","source_link","_ref2","open","Fragment","dist_index_esm","pt","page_footer","editUrl","contributors","concat","login"],"mappings":"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","file":"component---content-tooling-testing-mdx-441059e0bfeda80faf1a.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/Users/smudge/Code/Xedi/libraries/sdk/js/docs/node_modules/@primer/gatsby-theme-doctocat/src/components/layout.js\";\nimport { Text, Link, Flash } from '@primer/components';\nimport { InfoIcon } from '@primer/styled-octicons';\nimport InlineCode from '@primer/gatsby-theme-doctocat/src/components/inline-code';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <p>{`Testing our code often feels like a chore, or something we leave until last. For most, testing is the mashed potatoes of development. It makes up the majority of the task and isn't the most attractive thing on our plate.`}</p>\n    <p>{`In this section we'll look at using unit tests to test our code to provide confidence that any changes we make don't break other behaviours within the SDK.`}</p>\n    <Flash mdxType=\"Flash\">\n    <InfoIcon mr={2} mdxType=\"InfoIcon\" />\n    If you are looking for information on manual testing, read the <Link href=\"/tooling/debugging\" mdxType=\"Link\">debugging</Link> section.\n    </Flash>\n    <h2>{`Directory Structure`}</h2>\n    <p>{`Testing (at the time of writing) focusses on the behaviors of the SDK, rather than a broad spread approach. This maps to how the files and directories are structured. Rather than mimicking the `}<inlineCode parentName=\"p\">{`src`}</inlineCode>{` directory structure, the directories are structured based on the hierarchy at runtime. So for `}<inlineCode parentName=\"p\">{`Xedi.Auth`}</inlineCode>{`, you would find those tests in `}<inlineCode parentName=\"p\">{`tests/Unit/Auth`}</inlineCode>{` and so on.`}</p>\n    <p>{`Through-out this page, I will continue to use Marvel's Avengers as a subject material. I'm going to test an API that lists the members of the Avengers.`}</p>\n    <p>{`First I need a directory, so I will create `}<inlineCode parentName=\"p\">{`tests/Unit/Avengers`}</inlineCode>{`.`}</p>\n    <p>{`Next I need to test each function in my Avengers API. At present I have one function, `}<inlineCode parentName=\"p\">{`list()`}</inlineCode>{`, so I create `}<inlineCode parentName=\"p\">{`List.test.ts`}</inlineCode>{` in my `}<inlineCode parentName=\"p\">{`Avengers`}</inlineCode>{` directory.`}</p>\n    <h2>{`Authoring a test`}</h2>\n    <p>{`Once I have my file, I can start writing my test. Because we are using `}<Link href=\"https://mochajs.org/\" mdxType=\"Link\">{`MochaJS`}</Link>{` as a testing framework we get a couple of functions included by default.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-typescript\"\n      }}>{`import { assert } from 'chai';\nimport { Collection, Avenger } from '../../../src/Models/Models';\nimport Avengers from '../../../src/Services/Avengers';\nimport Axios, { AxiosInstance } from 'axios';\nimport Config from '../../../src/Config/Config;\nimport JsonResponse from '../../../src/Interfaces/JsonResponse;\nimport nock from 'nock';\n\ndescribe('Avengers@list', () => {\n    it('should return a list of avengers', async () => {\n        const positiveResponse: JsonResponse<Collection<Avenger>> = {\n            data: [\n                {\n                    \"_id\": 1,\n                    \"email\": \"t.stark@avengers.org\",\n                    \"first_name\": \"Anthony\",\n                    \"last_name\": \"Stark\",\n                    \"job_title\": \"Iron Man\"\n                },\n                {\n                    \"_id\": 2,\n                    \"email\": \"s.rogers@avengers.org\",\n                    \"first_name\": \"Steve\",\n                    \"last_name\": \"Rogers\",\n                    \"job_title\": \"Captain America\"\n                }\n            ]\n        };\n\n        nock(\"https://api.xedi.com\")\n            .get(\"/1/avengers\")\n            .reply(200, positiveResponse);\n\n        const configBag = new Config();\n        const httpClient: AxiosInstance = new Axios({\n            baseUrl: 'https://api.xedi.com'\n        });\n\n        const avengersAPI = new Avengers(configBag, httpClient);\n\n        const result = await avengersApi.list();\n\n        assert.isArray(result);\n        assert.lengthOf(result, 2);\n    });\n});\n`}</code></pre>\n    <Text as=\"p\" mt={2} mb={3} fontSize={1} color=\"gray.5\" mdxType=\"Text\">tests/Unit/Avengers/List.test.ts</Text>\n    <p>{`Lets examine this test.`}</p>\n    <ul>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Below the `}<inlineCode parentName=\"p\">{`import`}</inlineCode>{` statements is the entrypoint for the framework. In this file we are describing the list functionality of the Avengers API. Therefore, `}<inlineCode parentName=\"p\">{`Avengers@list`}</inlineCode>{` is what will appear in the results output.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We have one behavioural test, in which we assert `}<inlineCode parentName=\"p\">{`it should return a list of avengers`}</inlineCode>{`. Because this method contains a `}<Text as=\"em\" mdxType=\"Text\">{`asynchronous`}</Text>{` http request, we denote that the this test is also asynchronous with the `}<inlineCode parentName=\"p\">{`async`}</inlineCode>{` keyword.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`Personal preference, I have added a fixture at the top of the test. This could easily be done inline or in a separate file.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We use `}<Link href=\"https://github.com/nock/nock\" mdxType=\"Link\">{`Nock`}</Link>{` to intercept requests to the API Gateway and return predefined responses to matching endpoints.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We then need to setup our class. This concludes the the setup phase of our tests.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We invoke the subject function `}<inlineCode parentName=\"p\">{`list()`}</inlineCode>{` and assign the response to a `}<inlineCode parentName=\"p\">{`const`}</inlineCode>{` value.`}</p>\n      </li>\n      <li parentName=\"ul\">\n        <p parentName=\"li\">{`We enter the assert phase, and utilize functions from `}<Link href=\"https://chaijs.com\" mdxType=\"Link\">{`Chai.js`}</Link>{` to test the response.`}</p>\n      </li>\n    </ul>\n    <Flash scheme=\"yellow\" mdxType=\"Flash\">\n    <InfoIcon mr={2} mdxType=\"InfoIcon\" />\n    It's important to remember that Mocha will pass any test that doesn't error. This is the primary reason I've used <InlineCode mdxType=\"InlineCode\">async/await</InlineCode> rather than <InlineCode mdxType=\"InlineCode\">then/catch</InlineCode>.\n    </Flash>\n    <h2>{`Running your test`}</h2>\n    <p>{`Now that I've written my test, lets see if it will run. Simply run: `}<InlineCode mdxType=\"InlineCode\">{`npm run test`}</InlineCode>{`.`}</p>\n    <p>{`I will also check my code conforms to best-practice. For this run: `}<InlineCode mdxType=\"InlineCode\">{`npm run lint:tests`}</InlineCode>{`. If you want to know more about this, read the section on `}<Link href=\"/tooling/linting\" mdxType=\"Link\">{`Linting`}</Link>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import {Box, Link} from '@primer/components'\nimport React from 'react'\n\nfunction TableOfContents({items, depth}) {\n  return (\n    <Box as=\"ul\" m={0} p={0} css={{listStyle: 'none'}}>\n      {items.map(item => (\n        <Box as=\"li\" key={item.url} pl={depth > 0 ? 3 : 0}>\n          <Link display=\"inline-block\" py={1} href={item.url} color=\"gray.6\">\n            {item.title}\n          </Link>\n          {item.items ? (\n            <TableOfContents items={item.items} depth={depth + 1} />\n          ) : null}\n        </Box>\n      ))}\n    </Box>\n  )\n}\n\nTableOfContents.defaultProps = {\n  depth: 0,\n}\n\nexport default TableOfContents\n","import {\n  BorderBox,\n  Box,\n  Details,\n  Flex,\n  Grid,\n  Heading,\n  Position,\n  Text,\n} from '@primer/components'\nimport {ChevronDownIcon, ChevronRightIcon} from '@primer/styled-octicons'\nimport React from 'react'\nimport Head from './head'\nimport Header, {HEADER_HEIGHT} from './header'\nimport PageFooter from './page-footer'\nimport Sidebar from './sidebar'\nimport SourceLink from './source-link'\nimport StatusLabel from './status-label'\nimport TableOfContents from './table-of-contents'\n\nfunction Layout({children, pageContext}) {\n  const {\n    title,\n    description,\n    status,\n    source,\n    additionalContributors = [],\n  } = pageContext.frontmatter\n\n  return (\n    <Flex flexDirection=\"column\" minHeight=\"100vh\">\n      <Head title={title} description={description} />\n      <Header />\n      <Flex flex=\"1 1 auto\" flexDirection=\"row\" css={{zIndex: 0}}>\n        <Box display={['none', null, null, 'block']}>\n          <Sidebar />\n        </Box>\n        <Grid\n          id=\"skip-nav\"\n          maxWidth=\"100%\"\n          gridTemplateColumns={['100%', null, 'minmax(0, 65ch) 220px']}\n          gridTemplateAreas={[\n            '\"heading\" \"content\"',\n            null,\n            '\"heading .\" \"content table-of-contents\"',\n          ]}\n          gridColumnGap={[null, null, 6, 7]}\n          gridRowGap={3}\n          mx=\"auto\"\n          p={[5, 6, null, 7]}\n          css={{alignItems: 'start', alignSelf: 'start'}}\n        >\n          <BorderBox\n            css={{gridArea: 'heading'}}\n            border={0}\n            borderBottom={1}\n            borderRadius={0}\n            pb={2}\n          >\n            <Heading>{title}</Heading>\n          </BorderBox>\n          {pageContext.tableOfContents.items ? (\n            <Position\n              display={['none', null, 'block']}\n              css={{gridArea: 'table-of-contents', overflow: 'auto'}}\n              position=\"sticky\"\n              top={HEADER_HEIGHT + 24}\n              maxHeight={`calc(100vh - ${HEADER_HEIGHT}px - 24px)`}\n            >\n              <Text display=\"inline-block\" fontWeight=\"bold\" mb={1}>\n                Table of contents\n              </Text>\n              <TableOfContents items={pageContext.tableOfContents.items} />\n            </Position>\n          ) : null}\n          <Box css={{gridArea: 'content'}}>\n            {status || source ? (\n              <Flex mb={3} alignItems=\"center\">\n                {status ? <StatusLabel status={status} /> : null}\n                <Box mx=\"auto\" />\n                {source ? <SourceLink href={source} /> : null}\n              </Flex>\n            ) : null}\n            {pageContext.tableOfContents.items ? (\n              <Box display={['block', null, 'none']} mb={3}>\n                <Details>\n                  {({open}) => (\n                    <>\n                      <Text as=\"summary\" fontWeight=\"bold\">\n                        {open ? (\n                          <ChevronDownIcon mr={2} />\n                        ) : (\n                          <ChevronRightIcon mr={2} />\n                        )}\n                        Table of contents\n                      </Text>\n                      <Box pt={1}>\n                        <TableOfContents\n                          items={pageContext.tableOfContents.items}\n                        />\n                      </Box>\n                    </>\n                  )}\n                </Details>\n              </Box>\n            ) : null}\n            {children}\n            <PageFooter\n              editUrl={pageContext.editUrl}\n              contributors={pageContext.contributors.concat(\n                additionalContributors.map((login) => ({login})),\n              )}\n            />\n          </Box>\n        </Grid>\n      </Flex>\n    </Flex>\n  )\n}\n\nexport default Layout\n"],"sourceRoot":""}